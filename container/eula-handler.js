const fs = require('fs');
const path = require('path');

function ensureEulaAccepted(filePath) {
  const eulaFileName = path.basename(filePath);
  try {
    let needsWrite = false;
    let fileContent = '';
    let eulaAccepted = false;

    if (fs.existsSync(filePath)) {
      fileContent = fs.readFileSync(filePath, 'utf8');
      const lines = fileContent.split('\n');
      const eulaLineIndex = lines.findIndex(line => line.trim().startsWith('eula='));

      if (eulaLineIndex !== -1) {
        const line = lines[eulaLineIndex].trim();
        const value = line.split('=')[1];
        if (value && value.toLowerCase() === 'true') {
          eulaAccepted = true;
        } else {
          // Found eula= but it's not true (false, empty, or something else)
          lines[eulaLineIndex] = 'eula=true';
          fileContent = lines.join('\n');
          needsWrite = true;
          console.log(`Set eula=true in ${eulaFileName}`);
        }
      } else {
        // eula= line not found
        fileContent += (fileContent.endsWith('\n') ? '' : '\n') + 'eula=true\n';
        needsWrite = true;
        console.log(`Added eula=true to ${eulaFileName}`);
      }
    } else {
      // File does not exist
      fileContent = '# By changing the setting below to TRUE you are indicating your agreement to our EULA (https://aka.ms/MinecraftEULA).\n# Generated by minecraft-pod\n# You can find it online at https://aka.ms/MinecraftEULA\neula=true\n';
      needsWrite = true;
      console.log(`${eulaFileName} not found. Creating with eula=true.`);
    }

    if (needsWrite) {
      console.log(`Writing updated ${eulaFileName} to ${filePath}`);
      fs.writeFileSync(filePath, fileContent, 'utf8');
    } else if (eulaAccepted) {
        console.log(`eula=true already set in ${eulaFileName}. No changes needed.`);
    }

  } catch (error) {
    console.error(`Error processing ${eulaFileName} at ${filePath}:`, error);
    // Decide if we should exit or continue based on the error
    // process.exit(1); // Example: Exit if we can't ensure EULA is accepted
  }
}

module.exports = { ensureEulaAccepted }; 